name: CI


on:
  push:
    branches: [ "main" ]
    paths:
      - 'components/*/docker/**'


jobs:
  create_env_file:
    runs-on: ubuntu-latest
    steps:
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" >> $GITHUB_ENV
      - run: |
          echo ${{ env.PROJECT }}
  airflow-job:
    runs-on: ubuntu-latest
    needs: create_env_file
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Detect changed directories
      run: |
        changed_dirs=()
        for path in $(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -e ".*/docker"); do
          echo $path
          changed_dirs+=($path)
        done
        echo changed_dirs=$changed_dirs >> $GITHUB_ENV
        echo "${{ env.changed_dirs }}"
    - name: Build and push Airflow image
      uses: docker://gcr.io/kaniko-project/executor:v1.1.0
      if: contains(env.changed_dirs, 'airflow/docker')
      with:
        args: >-
          --context=dir:///github/workspace/components/airflow/docker
          --destination=eu.gcr.io/${{ env.PROJECT }}/airflow:${{ github.sha }}
        dockerfile: components/airflow/docker/Dockerfile
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
# jobs:
#   create_env_file:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 'Create env file'
#         run: |
#           echo "${{ secrets.ENV_FILE }}" >> $GITHUB_ENV
#       - run: |
#           echo ${{ env.PROJECT }}
#   # build-airflow-image:
#   #   runs-on: ubuntu-latest
#   #   if: startsWith(github.event.head_commit.modified, 'airflow/docker/')
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - name: Build and push Airflow image
#   #       uses: docker://gcr.io/kaniko-project/executor:v1.1.0
#   #       with:
#   #         args: >-
#   #           --context=dir:///github/workspace/airflow/docker
#   #           --destination=eu.gcr.io/<your-project-id>/airflow:latest
#   #         dockerfile: airflow/docker/Dockerfile
#   #         service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

#   build-postgres-image:
#     runs-on: ubuntu-latest
#     if: startsWith(github.event.head_commit.modified, 'components/postgres/docker/')
#     steps:
#       - uses: actions/checkout@v3
#       - name: Build and push Postgres image
#         uses: docker://gcr.io/kaniko-project/executor:v1.1.0
#         with:
#           args: >-
#             --context=dir:///github/workspace/postgres/docker
#             --destination=eu.gcr.io/${{ env.PROJECT }}/postgres:latest
#           dockerfile: postgres/docker/Dockerfile
#           service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

