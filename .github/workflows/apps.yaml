name: PyApps Tests

on:
  push:
    branches:
    - main
    paths:
      - 'components/docs_app/docker/app.py'
      - 'components/data_validation/**'
      - 'components/kafka/scripts/**'
      - 'components/airflow/dags/**'
      - 'components/ml_train/script/**'
      - 'components/spark/scripts/**'
      - 'components/ml_serve/docker/*.py'
      - 'components/ml_train/scripts/**'
      - 'scripts/create_seed.py'
  pull_request:
    branches:
    - main
    paths:
      - 'components/docs_app/docker/app.py'
      - 'components/data_validation/**'
      - 'components/kafka/scripts/**'
      - 'components/airflow/dags/**'
      - 'components/ml_train/script/**'
      - 'components/spark/scripts/**'
      - 'components/ml_serve/docker/*.py'
      - 'components/ml_train/scripts/**'
      - 'scripts/create_seed.py'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          architecture: "x64"
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache
      - name: Install poetry
        run: |
          python -m pip install pipenv
      - name: Cache Dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: ./.venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - name: Install requirements
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev --verbose
      - name: Run tests [ s -> print statements ]
        run: |
          python -m pipenv run python -m pytest -sxv
          # s for print statements
          # x to fail fast
          # v to increase verbosity
      - name: Lint
        run: python -m pipenv run python -m pylint --recursive=y .
