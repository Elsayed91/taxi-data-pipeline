apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
spec:
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - name: kafka-broker
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-broker:9092
        - name: KAFKA_CREATE_TOPICS
          value: "nytaxi_topic:1:1" # topic:partition:replicas
      - name: git-sync
        image: k8s.gcr.io/git-sync/git-sync:v3.6.2
        imagePullPolicy: Always
        securityContext:
          runAsUser: 65533
        envFrom:
          - configMapRef:
              name: git-env
        volumeMounts:
          - name: code
            mountPath: /git
      - name: producer
        image: eu.gcr.io/${PROJECT}/kafka
        imagePullPolicy: Always
        command: ["python3", "/git/repo/components/kafka/scripts/producer.py"]
        env:
        - name: KAFKA_TOPIC
          value: nytaxi_topic
        - name: SLEEP_DURATION
          value: "60"
        volumeMounts:
          - name: code
            mountPath: /git
      - name: consumer
        image: eu.gcr.io/${PROJECT}/kafka
        imagePullPolicy: Always
        command: ["python3", "/git/repo/components/kafka/scripts/consumer.py"]
        env:
        - name: KAFKA_TOPIC
          value: nytaxi_topic
        - name: DESTINATION
          value: "${PROJECT}.kafka_stream.kafka"
        volumeMounts:
          - name: code
            mountPath: /git
      nodeSelector:
        cloud.google.com/gke-nodepool: ${TRAINING_NODE_POOL}
        iam.gke.io/gke-metadata-server-enabled: "true"
      volumes:
        - name: code
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-service
spec:
  ports:
  - port: 9092
  selector:
    app: kafka-broker
