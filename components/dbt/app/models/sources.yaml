version: 2

sources:
  - name: staging_data
    description: staging data, includes unaltered but cleaned current data and monthly aggregated historical data
    database: "{{ env_var('PROJECT') }}"
    schema: "{{ env_var('STAGING_DATASET') }}"
    tables:
      - name: yellow_staging
        loaded_at_field: tpep_pickup_datetime
        identifier: "{{ env_var('YELLOW_STAGING_TABLE') }}"
        description: >
          Holds records for last 3 months of data available. The data should have little to no bad data and is targeted at ML models.
        tests: 
          - dbt_expectations.expect_grouped_row_values_to_have_recent_data:
              group_by: [payment_type]
              timestamp_column: tpep_pickup_datetime
              datepart: month
              interval: 5
          - dbt_expectations.expect_table_columns_to_match_set:
              column_list: 
                - "VendorID"
                - "tpep_pickup_datetime"
                - "tpep_dropoff_datetime"
                - "store_and_fwd_flag"
                - "RateCodeID"
                - "PULocationID"
                - "DOLocationID"
                - "passenger_count"
                - "trip_distance"
                - "fare_amount"
                - "extra"
                - "mta_tax"
                - "tip_amount"
                - "tolls_amount"
                - "improvement_surcharge"
                - "total_amount"
                - "payment_type"
                - "congestion_surcharge"
                - "airport_fee"
          - dbt_expectations.expect_table_column_count_to_equal:
              value: 19
          - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
              column_A: total_amount
              column_B: fare_amount
              or_equal: false
        columns:
          - name: VendorID
            description: A code indicating the TPEP provider that provided the record. 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc.
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_be_in_set:
                  value_set: [1,2]
                  quote_values: false
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: integer
          - name: tpep_pickup_datetime
            description: The date and time when the meter was engaged.
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: tpep_dropoff_datetime
            description: The date and time when the meter was disengaged.
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp		
          - name: store_and_fwd_flag
            description: This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka “store and forward,” because the vehicle did not have a connection to the server. Y= store and forward trip N= not a store and forward trip
            tests:
              - accepted_values:
                  values: ["Y", "N"]
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: string
          - name: RateCodeID
            description: The final rate code in effect at the end of the trip.
                        1= Standard rate
                        2=JFK
                        3=Newark
                        4=Nassau or Westchester
                        5=Negotiated fare
                        6=Group ride
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 6
                  strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: integer
          - name: PULocationID
            description: TLC Taxi Zone in which the taximeter was engaged
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 265
                  strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: integer
          - name: DOLocationID
            description: TLC Taxi Zone in which the taximeter was disengaged
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 265
                  strictly: false
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: integer
          - name: passenger_count
            description: The number of passengers in the vehicle. This is a driver-entered value.
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: integer
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 7
                  strictly: false
          - name: trip_distance
            description: The elapsed trip distance in miles reported by the taximeter.
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
              - dbt_expectations.expect_column_values_to_be_within_n_stdevs:
                  sigma_threshold: 4 # (Optional. Default is 3)
              - dbt_expectations.expect_column_proportion_of_unique_values_to_be_between:
                  min_value: 0.3  # (Optional)
                  max_value: 1 # (Optional)
          - name: fare_amount
            description: The time-and-distance fare calculated by the meter.
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
              - dbt_expectations.expect_column_values_to_be_within_n_stdevs:
                  sigma_threshold: 4 
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 2.5
                  max_value: 250
                  strictly: false
          - name: extra
            description: Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges.
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
          - name: mta_tax
            description: $0.50 MTA tax that is automatically triggered based on the metered rate in use.
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
              - dbt_expectations.expect_column_proportion_of_unique_values_to_be_between:
                  min_value: 0  # (Optional)
                  max_value: .01 # (Optional)
          - name: tip_amount
            description: Tip amount. This field is automatically populated for credit card tips. Cash tips are not included.
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
          - name: tolls_amount
            description: Total amount of all tolls paid in trip.
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
              - dbt_expectations.expect_column_values_to_be_within_n_stdevs:
                  sigma_threshold: 4 
          - name: improvement_surcharge
            description: $0.30 improvement surcharge assessed trips at the flag drop. The improvement surcharge began being levied in 2015.
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 3.1
                  strictly: false
          - name: total_amount
            description: The total amount charged to passengers. Does not include cash tips.
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
          - name: payment_type
            description: A numeric code signifying how the passenger paid for the trip.
                          1= Credit card
                          2= Cash
                          3= No charge
                          4= Dispute
                          5= Unknown
                          6= Voided trip
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: integer
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 6
                  strictly: false
          - name: congestion_surcharge
            description: Total amount collected in trip for NYS congestion surcharge.
            tests:
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 3
                  strictly: false
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float
          - name: airport_fee
            description: $1.25 for pick up only at LaGuardia and John F. Kennedy Airports
            tests:
              - dbt_expectations.expect_column_values_to_be_in_set:
                  value_set: [0,1.25]
                  quote_values: false
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: float		
                  
  - name: historical_data
    description: summarized & aggregated historical data, models are created via Spark.
    database: "{{ env_var('PROJECT') }}"
    schema: "{{ env_var('HISTORICAL_DATASET') }}"
    tables:
      - name: yellow_historical
        identifier: "{{ env_var('YELLOW_SUMMARY_TABLE') }}"
        loaded_at_field: first_day_of_month
        description: >
          Holds records monthly summaries for historical yellow trip data.
          as this data is in raw (but aggregated) form i.e no cleaning has been done to it, 
          no tests will be carried out on it.
        columns:
          - name: VendorID
            description: A code indicating the TPEP provider that provided the record. 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc.
          - name: first_day_of_month
            description: First day of the summarized month.
          - name: store_and_fwd_flag
            description: >
              This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, 
              aka “store and forward,” because the vehicle did not have a connection to the server. Y= store and 
              forward trip N= not a store and forward trip
          - name: pickup_zone
            description: TLC Taxi Zone in which the taximeter was engaged
          - name: dropoff_zone
            description: TLC Taxi Zone in which the taximeter was disengaged
          - name: average_passenger_count
            description: The average number of passengers in the vehicle.
          - name: average_trip_distance
            description: The average trip distance for all trips in a month.
          - name: monthly_fare_amount
            description: The monthly sum of time-and-distance fare calculated by the meter.
          - name: monthly_extra_amount
            description: Monthly sum of miscellaneous extras and surcharges.
          - name: monthly_mta_tax
            description: Monthly sum of MTA tax that is automatically triggered based on the metered rate in use.
          - name: monthly_tip_amount
            description: Monthly sum of total tip amount.
          - name: monthly_tolls_amount
            description: Monthly sum of all tolls paid.
          - name: monthly_improvement_surcharge
            description: Monthly total of the improvement surcharge assessed trips.
          - name: monthly_total_amount
            description: The monthly total amount charged to all passengers. Does not include cash tips.
          - name: payment_type
            description: >
              A numeric code signifying how the passenger paid for the trip.
                1= Credit card
                2= Cash
                3= No charge
                4= Dispute
                5= Unknown
                6= Voided trip
          - name: monthly_congestion_surcharge
            description: Monthly total amount collected in trip for NYS congestion surcharge.
          - name: monthly_airport_fee
            description: Monthly total amount fee collected for airport trips.

