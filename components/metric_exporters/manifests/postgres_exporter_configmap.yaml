apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-postgres-exporter-cm
  annotations:
    reloader.stakater.com/match: "true"
data:
  allow-snippet-annotations: "false"
  config.yaml: |
    pg_database:
      cache_seconds: 30
      master: true
      metrics:
      - datname:
          description: Name of the database
          usage: LABEL
      - size_bytes:
          description: Disk space used by the database
          usage: GAUGE
      query: SELECT pg_database.datname, pg_database_size(pg_database.datname) as size_bytes
        FROM pg_database
    pg_postmaster:
      master: true
      metrics:
      - start_time_seconds:
          description: Time at which postmaster started
          usage: GAUGE
      query: SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()
    pg_replication:
      master: true
      metrics:
      - lag:
          description: Replication lag behind master in seconds
          usage: GAUGE
      query: SELECT CASE WHEN NOT pg_is_in_recovery() THEN 0 ELSE GREATEST (0, EXTRACT(EPOCH
        FROM (now() - pg_last_xact_replay_timestamp()))) END AS lag
    pg_stat_activity_idle:
      metrics:
      - application_name:
          description: Application Name
          usage: LABEL
      - process_seconds:
          description: Idle time of server processes
          usage: HISTOGRAM
      query: |
        WITH
          metrics AS (
            SELECT
              application_name,
              SUM(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - state_change))::bigint)::float AS process_seconds_sum,
              COUNT(*) AS process_seconds_count
            FROM pg_stat_activity
            WHERE state = 'idle'
            GROUP BY application_name
          ),
          buckets AS (
            SELECT
              application_name,
              le,
              SUM(
                CASE WHEN EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - state_change)) <= le
                  THEN 1
                  ELSE 0
                END
              )::bigint AS bucket
            FROM
              pg_stat_activity,
              UNNEST(ARRAY[1, 2, 5, 15, 30, 60, 90, 120, 300]) AS le
            GROUP BY application_name, le
            ORDER BY application_name, le
          )
        SELECT
          application_name,
          process_seconds_sum,
          process_seconds_count,
          ARRAY_AGG(le) AS process_seconds,
          ARRAY_AGG(bucket) AS process_seconds_bucket
        FROM metrics JOIN buckets USING (application_name)
        GROUP BY 1, 2, 3
    pg_stat_statements:
      master: true
      metrics:
      - rolname:
          description: Name of user
          usage: LABEL
      - datname:
          description: Name of database
          usage: LABEL
      - queryid:
          description: Query ID
          usage: LABEL
      - calls:
          description: Number of times executed
          usage: COUNTER
      - total_time_seconds:
          description: Total time spent in the statement, in milliseconds
          usage: COUNTER
      - min_time_seconds:
          description: Minimum time spent in the statement, in milliseconds
          usage: GAUGE
      - max_time_seconds:
          description: Maximum time spent in the statement, in milliseconds
          usage: GAUGE
      - mean_time_seconds:
          description: Mean time spent in the statement, in milliseconds
          usage: GAUGE
      - stddev_time_seconds:
          description: Population standard deviation of time spent in the statement, in
            milliseconds
          usage: GAUGE
      - rows:
          description: Total number of rows retrieved or affected by the statement
          usage: COUNTER
      - shared_blks_hit:
          description: Total number of shared block cache hits by the statement
          usage: COUNTER
      - shared_blks_read:
          description: Total number of shared blocks read by the statement
          usage: COUNTER
      - shared_blks_dirtied:
          description: Total number of shared blocks dirtied by the statement
          usage: COUNTER
      - shared_blks_written:
          description: Total number of shared blocks written by the statement
          usage: COUNTER
      - local_blks_hit:
          description: Total number of local block cache hits by the statement
          usage: COUNTER
      - local_blks_read:
          description: Total number of local blocks read by the statement
          usage: COUNTER
      - local_blks_dirtied:
          description: Total number of local blocks dirtied by the statement
          usage: COUNTER
      - local_blks_written:
          description: Total number of local blocks written by the statement
          usage: COUNTER
      - temp_blks_read:
          description: Total number of temp blocks read by the statement
          usage: COUNTER
      - temp_blks_written:
          description: Total number of temp blocks written by the statement
          usage: COUNTER
      - blk_read_time_seconds:
          description: Total time the statement spent reading blocks, in milliseconds
            (if track_io_timing is enabled, otherwise zero)
          usage: COUNTER
      - blk_write_time_seconds:
          description: Total time the statement spent writing blocks, in milliseconds
            (if track_io_timing is enabled, otherwise zero)
          usage: COUNTER
      query: SELECT t2.rolname, t3.datname, queryid, calls, ( total_plan_time + total_exec_time
        ) / 1000 as total_time_seconds, ( min_plan_time + min_exec_time ) / 1000 as min_time_seconds,
        ( max_plan_time + max_exec_time ) / 1000 as max_time_seconds, ( mean_plan_time
        + mean_exec_time ) / 1000 as mean_time_seconds, ( stddev_plan_time + stddev_exec_time
        )  / 1000 as stddev_time_seconds, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied,
        shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written,
        temp_blks_read, temp_blks_written, blk_read_time / 1000 as blk_read_time_seconds,
        blk_write_time / 1000 as blk_write_time_seconds FROM pg_stat_statements t1 JOIN
        pg_roles t2 ON (t1.userid=t2.oid) JOIN pg_database t3 ON (t1.dbid=t3.oid) WHERE
        t2.rolname != 'rdsadmin' AND queryid IS NOT NULL
    pg_stat_user_tables:
      metrics:
      - datname:
          description: Name of current database
          usage: LABEL
      - schemaname:
          description: Name of the schema that this table is in
          usage: LABEL
      - relname:
          description: Name of this table
          usage: LABEL
      - seq_scan:
          description: Number of sequential scans initiated on this table
          usage: COUNTER
      - seq_tup_read:
          description: Number of live rows fetched by sequential scans
          usage: COUNTER
      - idx_scan:
          description: Number of index scans initiated on this table
          usage: COUNTER
      - idx_tup_fetch:
          description: Number of live rows fetched by index scans
          usage: COUNTER
      - n_tup_ins:
          description: Number of rows inserted
          usage: COUNTER
      - n_tup_upd:
          description: Number of rows updated
          usage: COUNTER
      - n_tup_del:
          description: Number of rows deleted
          usage: COUNTER
      - n_tup_hot_upd:
          description: Number of rows HOT updated (i.e., with no separate index update
            required)
          usage: COUNTER
      - n_live_tup:
          description: Estimated number of live rows
          usage: GAUGE
      - n_dead_tup:
          description: Estimated number of dead rows
          usage: GAUGE
      - n_mod_since_analyze:
          description: Estimated number of rows changed since last analyze
          usage: GAUGE
      - last_vacuum:
          description: Last time at which this table was manually vacuumed (not counting
            VACUUM FULL)
          usage: GAUGE
      - last_autovacuum:
          description: Last time at which this table was vacuumed by the autovacuum daemon
          usage: GAUGE
      - last_analyze:
          description: Last time at which this table was manually analyzed
          usage: GAUGE
      - last_autoanalyze:
          description: Last time at which this table was analyzed by the autovacuum daemon
          usage: GAUGE
      - vacuum_count:
          description: Number of times this table has been manually vacuumed (not counting
            VACUUM FULL)
          usage: COUNTER
      - autovacuum_count:
          description: Number of times this table has been vacuumed by the autovacuum
            daemon
          usage: COUNTER
      - analyze_count:
          description: Number of times this table has been manually analyzed
          usage: COUNTER
      - autoanalyze_count:
          description: Number of times this table has been analyzed by the autovacuum
            daemon
          usage: COUNTER
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          seq_scan,
          seq_tup_read,
          idx_scan,
          idx_tup_fetch,
          n_tup_ins,
          n_tup_upd,
          n_tup_del,
          n_tup_hot_upd,
          n_live_tup,
          n_dead_tup,
          n_mod_since_analyze,
          COALESCE(last_vacuum, '1970-01-01Z') as last_vacuum,
          COALESCE(last_autovacuum, '1970-01-01Z') as last_autovacuum,
          COALESCE(last_analyze, '1970-01-01Z') as last_analyze,
          COALESCE(last_autoanalyze, '1970-01-01Z') as last_autoanalyze,
          vacuum_count,
          autovacuum_count,
          analyze_count,
          autoanalyze_count
        FROM
          pg_stat_user_tables
    pg_statio_user_tables:
      metrics:
      - datname:
          description: Name of current database
          usage: LABEL
      - schemaname:
          description: Name of the schema that this table is in
          usage: LABEL
      - relname:
          description: Name of this table
          usage: LABEL
      - heap_blks_read:
          description: Number of disk blocks read from this table
          usage: COUNTER
      - heap_blks_hit:
          description: Number of buffer hits in this table
          usage: COUNTER
      - idx_blks_read:
          description: Number of disk blocks read from all indexes on this table
          usage: COUNTER
      - idx_blks_hit:
          description: Number of buffer hits in all indexes on this table
          usage: COUNTER
      - toast_blks_read:
          description: Number of disk blocks read from this table's TOAST table (if any)
          usage: COUNTER
      - toast_blks_hit:
          description: Number of buffer hits in this table's TOAST table (if any)
          usage: COUNTER
      - tidx_blks_read:
          description: Number of disk blocks read from this table's TOAST table indexes
            (if any)
          usage: COUNTER
      - tidx_blks_hit:
          description: Number of buffer hits in this table's TOAST table indexes (if any)
          usage: COUNTER
      query: SELECT current_database() datname, schemaname, relname, heap_blks_read, heap_blks_hit,
        idx_blks_read, idx_blks_hit, toast_blks_read, toast_blks_hit, tidx_blks_read,
        tidx_blks_hit FROM pg_statio_user_tables
