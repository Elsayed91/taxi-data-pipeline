steps:
  - id: build_postgres_image
    waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/postgres/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_POSTGRES_IMAGE_NAME}:$COMMIT_SHA",
      ]

  - id: build_flask_image
    waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/docs_app/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_FLASK_IMAGE_NAME}:$COMMIT_SHA",
      ]

  - id: build_dbt_image
    waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/dbt/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_DBT_IMAGE_NAME}:$COMMIT_SHA",
      ]

  - id: build_spark_image
    waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/spark/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_SPARK_IMAGE_NAME}",
      ]

  - id: build_airflow_image
    waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/airflow/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_AIRFLOW_IMAGE_NAME}:$COMMIT_SHA",
      ]


  - id: build_mlflow_image
    # waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/mlflow/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_MLFLOW_IMAGE_NAME}:$COMMIT_SHA",
      ]

  - id: build_ml_training_image
    # waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/ml_train/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_ML_TRAIN_IMAGE_NAME}:$COMMIT_SHA",
      ]

  - id: build_kafka_image
    # waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/kafka/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_KAFKA_IMAGE_NAME}:$COMMIT_SHA",
      ]

  - id: build_ml_serving
    # waitFor: ['-']
    name: "gcr.io/kaniko-project/executor:latest"
    args:
      [
        "--context=dir://${_COMPONENTS_PATH}/ml_serve/docker",
        "--cache=true",
        "--cache-ttl=6h",
        "--destination=eu.gcr.io/$PROJECT_ID/${_ML_SERVING_IMAGE_NAME}:$COMMIT_SHA",
      ]

substitutions:
  _POSTGRES_IMAGE_NAME: postgres
  _FLASK_IMAGE_NAME: flask
  _ML_TRAIN_IMAGE_NAME: ml_train
  _DBT_IMAGE_NAME: dbt
  _SPARK_IMAGE_NAME: spark
  _AIRFLOW_IMAGE_NAME: airflow
  _MLFLOW_IMAGE_NAME: mlflow
  _KAFKA_IMAGE_NAME: kafka
  _ML_SERVING_IMAGE_NAME: serving
  _COMPONENTS_PATH: "components"
